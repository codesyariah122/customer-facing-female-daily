# =============================================================== #
# BUILD WITH MULTISTAGE TO SUPPORT EXPERIMENTAL APP_DIR NEXTJS_13 #
# BECAUSE NEXTJS_13 NOT SUPPORT STANDALONE BUILD YET              #
# =============================================================== #
FROM node:16-alpine AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --scope=web --docker

# Add lockfile and package.json's of isolated subworkspace
FROM node:16-alpine AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app

# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app .
RUN yarn install --frozen-lockfile

# Build the project
COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json
RUN yarn turbo run build --filter=web...

FROM node:16-alpine AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

COPY --from=installer /app/apps/web/next.config.js ./next.config.js
COPY --from=installer /app/apps/web/package.json ./package.json
# This cause big file size of docker image
# FIXME: find solution to deploy "app" -> standalon mode on next.config.js
COPY --from=installer /app/node_modules ./node_modules
COPY --from=installer --chown=nextjs:nodejs /app/apps/web/.next ./.next
# It is best practice?
RUN yarn global add next

CMD yarn start
